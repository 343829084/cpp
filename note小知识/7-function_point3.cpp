#include <iostream>
using namespace std;
void sum(int c){ //sum也是指针
    cout<<"Called sum"<<endl;
}
typedef void (*Fun)(int);
Fun pFun=sum;
int main(void){
    pFun(5);
    (*pFun)(5);

    //magic：
     sum(5);
    (*sum)(5);
    (*********sum)(5);
}
/*
对于函数名：

&函数名=*函数名=函数名

对于函数指针：
*函数指针=函数指针 != &函数指针

函数名在最终二进制代码里并不占用任何内存空间，没有某个实体的内存区域保存函数名，所以，
&函数名=*函数名，如果要不等的话，必须把函数名保存到一个实体的内存空间里才能取地址。

函数类型可以隐式地转换成函数指针类型
（这种隐式转换叫退化，类似的行为还有数组类型退化成指针类型），
并且函数调用操作可以同时应用在函数和函数指针类型上，


函数指针本来要解指针的，但是C++为了让函数指针可以像函数对象一样工作，
所以强行规定不解指针也可以调用……
*/